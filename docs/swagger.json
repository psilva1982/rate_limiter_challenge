{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample rate limiter server.",
        "title": "Rate Limiter API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Rate Limiter Challange",
            "url": "github.com/psilva1982/rate_limiter_challenge/",
            "email": "severos1982@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Access protected route with rate limiting",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Rate limited route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "API_KEY",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "429": {
                        "description": "you have reached the maximum number of requests or actions allowed within a certain time frame",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get-api-key": {
            "post": {
                "description": "Get API key for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get API key",
                "parameters": [
                    {
                        "description": "User input",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User input",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.UserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}